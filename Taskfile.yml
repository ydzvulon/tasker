# https://taskfile.dev

version: "3"

tasks:
  default:
    silent: true
    cmds:
      - task: info

  # --- standard tasker extension tasks ----

  info:
    desc: show info
    cmds:
      - task: list
      - echo "main commands"

  list:
    desc: list all commands
    silent: true
    cmds:
      - task -l

  ls-full:
    desc: build documentation site
    vars:
      filter: '{{ default "*" .filter }}'
    silent: true
    cmds:
      - task -t Taskfile.full.yml -l | grep '{{.filter}}' | sed ''

  ls-sample-filter-docs-from-full:
    desc: _
    cmds:
      - |-
        task ls-full filter=doc | sed 's/* /task run-full task=/g' | sed 's/: /  /g'

  run-full:
    desc: run full qualified command. _example_=task run-full task=info.
    vars:
      defcmd: "task -t Taskfile.full.yml {{.task}}"
      reqmds: |-
        echo "'task' parameter is requrered try run-full task=info"
      rescmd: >-
        {{ if .task}}{{ .defcmd}}
        {{else}}{{.reqmds}}{{end}}
    cmds: ["{{.rescmd}}"]

  # --- / standard tasker extension tasks ----

  # --- project tasker main tasks ----

  shell-to-venv:
    desc: shell to virtual env. should already exist
    interactive: true
    cmds:
      - |-
        # ### @@act=doc block=line goal='make poetry tool available'
        source $HOME/.poetry/env
        # ### @@act=doc block=line goal='enter poetry shell'
        poetry shell

  resolve-pyenv-deps:
    desc: Update Python requirements
    cmds:
      - task run-full task=pyenv-update-here

  test:
    desc: "Run all tests"
    cmds:
      - coverage run -m pytest -s  tests && coverage html

  open-coverage-report:
    desc: open coverage in browser
    cmds:
      - coverage html

  build:
    desc: "Build results"
    cmds:
      - task build-pypi-pack
      - task build-pyinst-app
      - task build-docs-site

  build-pypi-pack:
    desc: "Build pypi package"
    cmds:
      - poetry build

  build-pyinst-app:
    desc: "Build pyinst app"
    cmds:
      - python -m PyInstaller tasker/tasker_ctl.py --onefile

  build-docs-site:
    desc: build documentation site
    cmds:
      - task run-full task=docs-builder:build-site

  ci-flow:
    desc: Build Cycle
    cmds:
      - task test
      - task build

  run-sample:
   desc: _
   cmds:
    - |-
      python tasker/tasker_ctl.py \
        --upath tests/data/sample-task/Taskfile.yml \
        resolve_static_task \
        ci-flow \
        jorney

  build-dev-gitpod-dimg:
    desc: build gitpod docker
    cmds:
      - docker build -f .gitpod.Dockerfile -t gitpod-dockerfile-test .
      
  build-dev-docker-dimg:
    desc: build gitpod docker
    cmds:
      - docker build -f .devspace.Dockerfile -t devspace-dockerfile-test .
      
  pyenv-update-here:
    desc: "resolve work/test"
    vars:
      deps_pip_run_list_txt: version/deps/deps.pip.run.broad.list.txt
      deps_pip_test_list_txt: version/deps/deps.pip.test.broad.list.txt
    cmds:
      - pip install -r {{.deps_pip_run_list_txt}}
      - pip install -r {{.deps_pip_test_list_txt}}